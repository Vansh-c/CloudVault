name: Release to PyPI

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Extract version from tag
      id: get_version
      run: |
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        else
          echo "VERSION=$(python -c "import cloudvault_discovery; print(cloudvault_discovery.__version__)")" >> $GITHUB_OUTPUT
        fi
    
    - name: Update version in pyproject.toml
      run: |
        sed -i 's/version = ".*"/version = "${{ steps.get_version.outputs.VERSION }}"/' pyproject.toml
        sed -i 's/__version__ = ".*"/__version__ = "${{ steps.get_version.outputs.VERSION }}"/' cloudvault_discovery/__init__.py
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        
    - name: Test install
      run: |
        pip install dist/*.whl
        cloudvault --help
    
    - name: Publish to Test PyPI
      if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*
    
    - name: Publish to PyPI
      if: github.event_name == 'release' && github.event.action == 'published'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Create Release Notes
      if: github.event_name == 'release'
      run: |
        echo "## CloudVault v${{ steps.get_version.outputs.VERSION }} Released! ðŸš€" >> release_notes.md
        echo "" >> release_notes.md
        echo "### Installation" >> release_notes.md
        echo '```bash' >> release_notes.md
        echo "pip install cloudvault4==${{ steps.get_version.outputs.VERSION }}" >> release_notes.md
        echo '```' >> release_notes.md
        echo "" >> release_notes.md
        echo "### Changes in this release:" >> release_notes.md
        git log --oneline $(git describe --tags --abbrev=0 HEAD^)..HEAD >> release_notes.md
        
    - name: Update Release
      if: github.event_name == 'release'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const release_notes = fs.readFileSync('release_notes.md', 'utf8');
          
          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id,
            body: release_notes
          });